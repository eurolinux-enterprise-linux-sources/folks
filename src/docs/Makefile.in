# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ENABLE_EDS_TRUE@am__append_1 = folks-eds
@ENABLE_EDS_TRUE@am__append_2 = \
@ENABLE_EDS_TRUE@	folks-eds-doc \
@ENABLE_EDS_TRUE@	folks-eds-gtk-doc \
@ENABLE_EDS_TRUE@	$(NULL)

@ENABLE_EDS_TRUE@am__append_3 = upload-docs-c-folks-eds upload-docs-vala-folks-eds
@ENABLE_LIBSOCIALWEB_TRUE@am__append_4 = folks-libsocialweb
@ENABLE_LIBSOCIALWEB_TRUE@am__append_5 = \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-libsocialweb-doc \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-libsocialweb-gtk-doc \
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)

@ENABLE_LIBSOCIALWEB_TRUE@am__append_6 = \
@ENABLE_LIBSOCIALWEB_TRUE@	upload-docs-c-folks-libsocialweb \
@ENABLE_LIBSOCIALWEB_TRUE@	upload-docs-vala-folks-libsocialweb \
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)

subdir = docs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-compiler-flag.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/introspection.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(folksdocdir)" \
	"$(DESTDIR)$(folksdummydocdir)" \
	"$(DESTDIR)$(folksdummygtkdocdir)" \
	"$(DESTDIR)$(folksedsdocdir)" "$(DESTDIR)$(folksedsgtkdocdir)" \
	"$(DESTDIR)$(folksgtkdocdir)" \
	"$(DESTDIR)$(folkslibsocialwebdocdir)" \
	"$(DESTDIR)$(folkslibsocialwebgtkdocdir)" \
	"$(DESTDIR)$(folkstelepathydocdir)" \
	"$(DESTDIR)$(folkstelepathygtkdocdir)"
DATA = $(folksdoc_DATA) $(folksdummydoc_DATA) $(folksdummygtkdoc_DATA) \
	$(folksedsdoc_DATA) $(folksedsgtkdoc_DATA) $(folksgtkdoc_DATA) \
	$(folkslibsocialwebdoc_DATA) $(folkslibsocialwebgtkdoc_DATA) \
	$(folkstelepathydoc_DATA) $(folkstelepathygtkdoc_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
API_VERSION_DOT = @API_VERSION_DOT@
API_VERSION_MAJOR = @API_VERSION_MAJOR@
API_VERSION_MINOR = @API_VERSION_MINOR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BACKEND_DIR = @BACKEND_DIR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CODE_COVERAGE_CFLAGS = @CODE_COVERAGE_CFLAGS@
CODE_COVERAGE_LDFLAGS = @CODE_COVERAGE_LDFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
C_ERROR_CFLAGS = @C_ERROR_CFLAGS@
DBUS_GLIB_CFLAGS = @DBUS_GLIB_CFLAGS@
DBUS_GLIB_LIBS = @DBUS_GLIB_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
EBOOK_CFLAGS = @EBOOK_CFLAGS@
EBOOK_LIBS = @EBOOK_LIBS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EDATASERVER_CFLAGS = @EDATASERVER_CFLAGS@
EDATASERVER_LIBS = @EDATASERVER_LIBS@
EGREP = @EGREP@
ENABLE_BUILD_TESTS = @ENABLE_BUILD_TESTS@
ENABLE_INSTALL_TESTS = @ENABLE_INSTALL_TESTS@
ERROR_CFLAGS = @ERROR_CFLAGS@
ERROR_INTROSPECTION_SCANNER_ARGS = @ERROR_INTROSPECTION_SCANNER_ARGS@
ERROR_VALAFLAGS = @ERROR_VALAFLAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FOLKS_DUMMY_API_VERSION = @FOLKS_DUMMY_API_VERSION@
FOLKS_DUMMY_LT_VERSION = @FOLKS_DUMMY_LT_VERSION@
FOLKS_EDS_API_VERSION = @FOLKS_EDS_API_VERSION@
FOLKS_EDS_LT_VERSION = @FOLKS_EDS_LT_VERSION@
FOLKS_LIBSOCIALWEB_API_VERSION = @FOLKS_LIBSOCIALWEB_API_VERSION@
FOLKS_LIBSOCIALWEB_LT_VERSION = @FOLKS_LIBSOCIALWEB_LT_VERSION@
FOLKS_MODULE_VERSION = @FOLKS_MODULE_VERSION@
FOLKS_TELEPATHY_API_VERSION = @FOLKS_TELEPATHY_API_VERSION@
FOLKS_TELEPATHY_LT_VERSION = @FOLKS_TELEPATHY_LT_VERSION@
FOLKS_TRACKER_API_VERSION = @FOLKS_TRACKER_API_VERSION@
FOLKS_TRACKER_LT_VERSION = @FOLKS_TRACKER_LT_VERSION@
GEE_CFLAGS = @GEE_CFLAGS@
GEE_LIBS = @GEE_LIBS@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GIO_CFLAGS = @GIO_CFLAGS@
GIO_LIBS = @GIO_LIBS@
GLIB_2_39_2_CFLAGS = @GLIB_2_39_2_CFLAGS@
GLIB_2_39_2_LIBS = @GLIB_2_39_2_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_COMPILE_SCHEMAS = @GLIB_COMPILE_SCHEMAS@
GLIB_LIBS = @GLIB_LIBS@
GMODULE_CFLAGS = @GMODULE_CFLAGS@
GMODULE_LIBS = @GMODULE_LIBS@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GSETTINGS_DISABLE_SCHEMAS_COMPILE = @GSETTINGS_DISABLE_SCHEMAS_COMPILE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_V_MERGE = @INTLTOOL_V_MERGE@
INTLTOOL_V_MERGE_OPTIONS = @INTLTOOL_V_MERGE_OPTIONS@
INTLTOOL__v_MERGE_ = @INTLTOOL__v_MERGE_@
INTLTOOL__v_MERGE_0 = @INTLTOOL__v_MERGE_0@
INTROSPECTION_CFLAGS = @INTROSPECTION_CFLAGS@
INTROSPECTION_COMPILER = @INTROSPECTION_COMPILER@
INTROSPECTION_GENERATE = @INTROSPECTION_GENERATE@
INTROSPECTION_GIRDIR = @INTROSPECTION_GIRDIR@
INTROSPECTION_LIBS = @INTROSPECTION_LIBS@
INTROSPECTION_MAKEFILE = @INTROSPECTION_MAKEFILE@
INTROSPECTION_SCANNER = @INTROSPECTION_SCANNER@
INTROSPECTION_TYPELIBDIR = @INTROSPECTION_TYPELIBDIR@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBM = @LIBM@
LIBOBJS = @LIBOBJS@
LIBREADLINE = @LIBREADLINE@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SW_CLIENT_CFLAGS = @SW_CLIENT_CFLAGS@
SW_CLIENT_LIBS = @SW_CLIENT_LIBS@
TARGET_VALAFLAGS = @TARGET_VALAFLAGS@
TP_GLIB_CFLAGS = @TP_GLIB_CFLAGS@
TP_GLIB_LIBS = @TP_GLIB_LIBS@
TRACKER_SPARQL_CFLAGS = @TRACKER_SPARQL_CFLAGS@
TRACKER_SPARQL_LIBS = @TRACKER_SPARQL_LIBS@
TRACKER_SPARQL_MAJOR = @TRACKER_SPARQL_MAJOR@
USE_NLS = @USE_NLS@
VALAC = @VALAC@
VALADOC = @VALADOC@
VALADOC_CFLAGS = @VALADOC_CFLAGS@
VALADOC_LIBS = @VALADOC_LIBS@
VAPIDIR = @VAPIDIR@
VAPIGEN = @VAPIGEN@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
ZEITGEIST_CFLAGS = @ZEITGEIST_CFLAGS@
ZEITGEIST_LIBS = @ZEITGEIST_LIBS@
ZEITGEIST_PKG = @ZEITGEIST_PKG@
ZEITGEIST_VALAFLAGS = @ZEITGEIST_VALAFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gsettingsschemadir = @gsettingsschemadir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
intltool__v_merge_options_ = @intltool__v_merge_options_@
intltool__v_merge_options_0 = @intltool__v_merge_options_0@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
distclean_dirs = folks gtk-doc $(NULL) folks-dummy folks-telepathy \
	$(am__append_1) $(am__append_4)
docs = folks-doc folks-gtk-doc $(NULL) folks-dummy-doc \
	folks-dummy-gtk-doc $(NULL) folks-telepathy-doc \
	folks-telepathy-gtk-doc $(NULL) $(am__append_2) \
	$(am__append_5)
upload_docs = upload-docs-c-folks upload-docs-vala-folks $(NULL) \
	upload-docs-c-folks-dummy upload-docs-vala-folks-dummy \
	upload-docs-c-folks-telepathy upload-docs-vala-folks-telepathy \
	$(am__append_3) $(am__append_6)
folks_wiki_pages = \
	concepts \
	glossary \
	debugging \
	$(NULL)

EXTRA_DIST = $(folks_wiki_files)
folksdocdir = $(datadir)/devhelp/references/folks
folksgtkdocdir = $(datadir)/gtk-doc/html/folks
common_doc_files = \
	*.css \
	*.png \
	*.js \
	index.htm \
	*.html \
	$(NULL)

folksdoc_DATA = \
	folks/folks/folks.devhelp2 \
	$(addprefix folks/folks/,$(common_doc_files)) \
	$(NULL)

folksgtkdoc_DATA = gtk-doc/folks/html/*
valadoc_flags = \
	--force \
	--package-version $(PACKAGE_VERSION) \
	--no-protected \
	--driver "$(shell valac --api-version)" \
	$(NULL)


# folks documentation
folks_doc_files_blacklist = \
	$(top_srcdir)/folks/internal.vala \
	$(NULL)

# this expands the list of files, so we can filter out elements
folks_doc_files_all = \
	$(wildcard $(top_srcdir)/folks/*.vala) \
	$(NULL)

folks_wiki_files = \
	$(addprefix wiki/,$(addsuffix .valadoc,$(folks_wiki_pages))) \
	$(NULL)

# FIXME: sort the files manually to work around the native doclet portion of
# bgo#662784
folks_doc_files = \
	$(sort \
	$(filter-out $(folks_doc_files_blacklist),$(folks_doc_files_all)))

folks_doc_deps = \
	gmodule-2.0 \
	gio-2.0 \
	gee-0.8 \
	folks-internal \
	folks-generics \
	build-conf \
	$(NULL)

valadoc_flags_folks = \
	$(valadoc_flags) \
	-X $(top_srcdir)/folks/folks.h \
	$(addprefix --pkg=,$(folks_doc_deps)) \
	--vapidir=$(top_srcdir)/folks \
	--wiki=$(top_srcdir)/docs/wiki \
	$(folks_doc_files) \
	$(NULL)


#####################
# Dummy docs #
#####################
folksdummydocdir = $(datadir)/devhelp/references/folks-dummy
folksdummygtkdocdir = $(datadir)/gtk-doc/html/folks-dummy
folksdummydoc_DATA = \
	folks-dummy/folks-dummy/folks-dummy.devhelp2 \
	$(addprefix folks-dummy/folks-dummy/,$(common_doc_files))\
	$(NULL)

folksdummygtkdoc_DATA = gtk-doc/folks-dummy/html/*
folks_dummy_doc_files = $(top_srcdir)/backends/dummy/lib/*.vala
folks_dummy_doc_deps = \
	gobject-2.0 \
	gio-2.0 \
	gee-0.8 \
	folks \
	folks-internal \
	folks-generics \
	$(NULL)

valadoc_flags_folks_dummy = \
	$(valadoc_flags) \
	-X $(top_srcdir)/backends/dummy/lib/folks/folks-dummy.h \
	$(addprefix --pkg=,$(folks_dummy_doc_deps)) \
	--vapidir=$(top_srcdir)/folks \
	--vapidir=$(top_srcdir)/backends/dummy/lib \
	$(folks_dummy_doc_files) \
	$(NULL)


#####################
# Telepathy docs #
#####################
folkstelepathydocdir = $(datadir)/devhelp/references/folks-telepathy
folkstelepathygtkdocdir = $(datadir)/gtk-doc/html/folks-telepathy
folkstelepathydoc_DATA = \
	folks-telepathy/folks-telepathy/folks-telepathy.devhelp2 \
	$(addprefix folks-telepathy/folks-telepathy/,$(common_doc_files))\
	$(NULL)

folkstelepathygtkdoc_DATA = gtk-doc/folks-telepathy/html/*

# ensure we only have one set of tp-zeitgeist interfaces defined
folks_telepathy_doc_files_blacklist = \
	$(top_srcdir)/backends/telepathy/lib/tp-zeitgeist.vala \
	$(NULL)

# this expands the list of files, so we can filter out elements
folks_telepathy_doc_files_all = \
	$(wildcard $(top_srcdir)/backends/telepathy/lib/*.vala) \
	$(NULL)

# FIXME: sort the files manually to work around the native doclet portion of
# bgo#662784
folks_telepathy_doc_files = \
	$(sort \
	$(filter-out $(folks_telepathy_doc_files_blacklist),$(folks_telepathy_doc_files_all)))

folks_telepathy_doc_deps = \
	gmodule-2.0 \
	gio-2.0 \
	gee-0.8 \
	telepathy-glib \
	zeitgeist-2.0 \
	tp-lowlevel \
	build-conf \
	folks \
	folks-internal \
	folks-generics \
	$(NULL)

valadoc_flags_folks_telepathy = \
	$(valadoc_flags) \
	-X $(top_srcdir)/backends/telepathy/lib/folks/folks-telepathy.h \
	$(addprefix --pkg=,$(folks_telepathy_doc_deps)) \
	--vapidir=$(top_srcdir)/folks \
	--vapidir=$(top_srcdir)/backends/telepathy/lib \
	$(folks_telepathy_doc_files) \
	$(NULL)


#####################
# EDS docs #
#####################
@ENABLE_EDS_TRUE@folksedsdocdir = $(datadir)/devhelp/references/folks-eds
@ENABLE_EDS_TRUE@folksedsgtkdocdir = $(datadir)/gtk-doc/html/folks-eds
@ENABLE_EDS_TRUE@folksedsdoc_DATA = \
@ENABLE_EDS_TRUE@	folks-eds/folks-eds/folks-eds.devhelp2 \
@ENABLE_EDS_TRUE@	$(addprefix folks-eds/folks-eds/,$(common_doc_files))\
@ENABLE_EDS_TRUE@	$(NULL)

@ENABLE_EDS_TRUE@folksedsgtkdoc_DATA = gtk-doc/folks-eds/html/*
@ENABLE_EDS_TRUE@folks_eds_doc_files = $(top_srcdir)/backends/eds/lib/*.vala
@ENABLE_EDS_TRUE@folks_eds_doc_deps = \
@ENABLE_EDS_TRUE@	gmodule-2.0 \
@ENABLE_EDS_TRUE@	gio-2.0 \
@ENABLE_EDS_TRUE@	gee-0.8 \
@ENABLE_EDS_TRUE@	libebook-1.2 \
@ENABLE_EDS_TRUE@	libedataserver-1.2 \
@ENABLE_EDS_TRUE@	build-conf \
@ENABLE_EDS_TRUE@	folks \
@ENABLE_EDS_TRUE@	folks-internal \
@ENABLE_EDS_TRUE@	folks-generics \
@ENABLE_EDS_TRUE@	$(NULL)

@ENABLE_EDS_TRUE@valadoc_flags_folks_eds = \
@ENABLE_EDS_TRUE@	$(valadoc_flags) \
@ENABLE_EDS_TRUE@	-X $(top_srcdir)/backends/eds/lib/folks/folks-eds.h \
@ENABLE_EDS_TRUE@	$(addprefix --pkg=,$(folks_eds_doc_deps)) \
@ENABLE_EDS_TRUE@	--vapidir=$(top_srcdir)/folks \
@ENABLE_EDS_TRUE@	--vapidir=$(top_srcdir)/backends/eds/lib \
@ENABLE_EDS_TRUE@	$(folks_eds_doc_files) \
@ENABLE_EDS_TRUE@	$(NULL)


#####################
# libsocialweb docs #
#####################
@ENABLE_LIBSOCIALWEB_TRUE@folkslibsocialwebdocdir = $(datadir)/devhelp/references/folks-libsocialweb
@ENABLE_LIBSOCIALWEB_TRUE@folkslibsocialwebgtkdocdir = $(datadir)/gtk-doc/html/folks-libsocialweb
@ENABLE_LIBSOCIALWEB_TRUE@folkslibsocialwebdoc_DATA = \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-libsocialweb/folks-libsocialweb/folks-libsocialweb.devhelp2 \
@ENABLE_LIBSOCIALWEB_TRUE@	$(addprefix folks-libsocialweb/folks-libsocialweb/,$(common_doc_files))\
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)

@ENABLE_LIBSOCIALWEB_TRUE@folkslibsocialwebgtkdoc_DATA = gtk-doc/folks-libsocialweb/html/*
@ENABLE_LIBSOCIALWEB_TRUE@folks_libsocialweb_doc_files = $(top_srcdir)/backends/libsocialweb/lib/*.vala
@ENABLE_LIBSOCIALWEB_TRUE@folks_libsocialweb_doc_deps = \
@ENABLE_LIBSOCIALWEB_TRUE@	gmodule-2.0 \
@ENABLE_LIBSOCIALWEB_TRUE@	gio-2.0 \
@ENABLE_LIBSOCIALWEB_TRUE@	gee-0.8 \
@ENABLE_LIBSOCIALWEB_TRUE@	libsocialweb-client \
@ENABLE_LIBSOCIALWEB_TRUE@	build-conf \
@ENABLE_LIBSOCIALWEB_TRUE@	folks \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-internal \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-generics \
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)

@ENABLE_LIBSOCIALWEB_TRUE@valadoc_flags_folks_libsocialweb = \
@ENABLE_LIBSOCIALWEB_TRUE@	$(valadoc_flags) \
@ENABLE_LIBSOCIALWEB_TRUE@	-X $(top_srcdir)/backends/libsocialweb/lib/folks/folks-libsocialweb.h \
@ENABLE_LIBSOCIALWEB_TRUE@	$(addprefix --pkg=,$(folks_libsocialweb_doc_deps)) \
@ENABLE_LIBSOCIALWEB_TRUE@	--vapidir=$(top_srcdir)/folks \
@ENABLE_LIBSOCIALWEB_TRUE@	--vapidir=$(top_srcdir)/backends/libsocialweb/lib \
@ENABLE_LIBSOCIALWEB_TRUE@	$(folks_libsocialweb_doc_files) \
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)


#####################
# end optional docs #
#####################
stamps = $(addsuffix .stamp, $(docs))
CLEANFILES = $(stamps)
doc_host = telepathy.freedesktop.org
doc_host_dir = /srv/telepathy.freedesktop.org/www/doc
GITIGNOREFILES = \
	$(distclean_dirs) \
	$(NULL)

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu docs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu docs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-folksdocDATA: $(folksdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksdoc_DATA)'; test -n "$(folksdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksdocdir)" || exit $$?; \
	done

uninstall-folksdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksdoc_DATA)'; test -n "$(folksdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksdocdir)'; $(am__uninstall_files_from_dir)
install-folksdummydocDATA: $(folksdummydoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksdummydoc_DATA)'; test -n "$(folksdummydocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksdummydocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksdummydocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksdummydocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksdummydocdir)" || exit $$?; \
	done

uninstall-folksdummydocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksdummydoc_DATA)'; test -n "$(folksdummydocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksdummydocdir)'; $(am__uninstall_files_from_dir)
install-folksdummygtkdocDATA: $(folksdummygtkdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksdummygtkdoc_DATA)'; test -n "$(folksdummygtkdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksdummygtkdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksdummygtkdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksdummygtkdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksdummygtkdocdir)" || exit $$?; \
	done

uninstall-folksdummygtkdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksdummygtkdoc_DATA)'; test -n "$(folksdummygtkdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksdummygtkdocdir)'; $(am__uninstall_files_from_dir)
install-folksedsdocDATA: $(folksedsdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksedsdoc_DATA)'; test -n "$(folksedsdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksedsdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksedsdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksedsdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksedsdocdir)" || exit $$?; \
	done

uninstall-folksedsdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksedsdoc_DATA)'; test -n "$(folksedsdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksedsdocdir)'; $(am__uninstall_files_from_dir)
install-folksedsgtkdocDATA: $(folksedsgtkdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksedsgtkdoc_DATA)'; test -n "$(folksedsgtkdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksedsgtkdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksedsgtkdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksedsgtkdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksedsgtkdocdir)" || exit $$?; \
	done

uninstall-folksedsgtkdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksedsgtkdoc_DATA)'; test -n "$(folksedsgtkdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksedsgtkdocdir)'; $(am__uninstall_files_from_dir)
install-folksgtkdocDATA: $(folksgtkdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folksgtkdoc_DATA)'; test -n "$(folksgtkdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folksgtkdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folksgtkdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folksgtkdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folksgtkdocdir)" || exit $$?; \
	done

uninstall-folksgtkdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folksgtkdoc_DATA)'; test -n "$(folksgtkdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folksgtkdocdir)'; $(am__uninstall_files_from_dir)
install-folkslibsocialwebdocDATA: $(folkslibsocialwebdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folkslibsocialwebdoc_DATA)'; test -n "$(folkslibsocialwebdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folkslibsocialwebdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folkslibsocialwebdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folkslibsocialwebdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folkslibsocialwebdocdir)" || exit $$?; \
	done

uninstall-folkslibsocialwebdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folkslibsocialwebdoc_DATA)'; test -n "$(folkslibsocialwebdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folkslibsocialwebdocdir)'; $(am__uninstall_files_from_dir)
install-folkslibsocialwebgtkdocDATA: $(folkslibsocialwebgtkdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folkslibsocialwebgtkdoc_DATA)'; test -n "$(folkslibsocialwebgtkdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folkslibsocialwebgtkdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folkslibsocialwebgtkdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folkslibsocialwebgtkdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folkslibsocialwebgtkdocdir)" || exit $$?; \
	done

uninstall-folkslibsocialwebgtkdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folkslibsocialwebgtkdoc_DATA)'; test -n "$(folkslibsocialwebgtkdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folkslibsocialwebgtkdocdir)'; $(am__uninstall_files_from_dir)
install-folkstelepathydocDATA: $(folkstelepathydoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folkstelepathydoc_DATA)'; test -n "$(folkstelepathydocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folkstelepathydocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folkstelepathydocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folkstelepathydocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folkstelepathydocdir)" || exit $$?; \
	done

uninstall-folkstelepathydocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folkstelepathydoc_DATA)'; test -n "$(folkstelepathydocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folkstelepathydocdir)'; $(am__uninstall_files_from_dir)
install-folkstelepathygtkdocDATA: $(folkstelepathygtkdoc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(folkstelepathygtkdoc_DATA)'; test -n "$(folkstelepathygtkdocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(folkstelepathygtkdocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(folkstelepathygtkdocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(folkstelepathygtkdocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(folkstelepathygtkdocdir)" || exit $$?; \
	done

uninstall-folkstelepathygtkdocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(folkstelepathygtkdoc_DATA)'; test -n "$(folkstelepathygtkdocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(folkstelepathygtkdocdir)'; $(am__uninstall_files_from_dir)
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(folksdocdir)" "$(DESTDIR)$(folksdummydocdir)" "$(DESTDIR)$(folksdummygtkdocdir)" "$(DESTDIR)$(folksedsdocdir)" "$(DESTDIR)$(folksedsgtkdocdir)" "$(DESTDIR)$(folksgtkdocdir)" "$(DESTDIR)$(folkslibsocialwebdocdir)" "$(DESTDIR)$(folkslibsocialwebgtkdocdir)" "$(DESTDIR)$(folkstelepathydocdir)" "$(DESTDIR)$(folkstelepathygtkdocdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-local

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-folksdocDATA install-folksdummydocDATA \
	install-folksdummygtkdocDATA install-folksedsdocDATA \
	install-folksedsgtkdocDATA install-folksgtkdocDATA \
	install-folkslibsocialwebdocDATA \
	install-folkslibsocialwebgtkdocDATA \
	install-folkstelepathydocDATA install-folkstelepathygtkdocDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-folksdocDATA uninstall-folksdummydocDATA \
	uninstall-folksdummygtkdocDATA uninstall-folksedsdocDATA \
	uninstall-folksedsgtkdocDATA uninstall-folksgtkdocDATA \
	uninstall-folkslibsocialwebdocDATA \
	uninstall-folkslibsocialwebgtkdocDATA \
	uninstall-folkstelepathydocDATA \
	uninstall-folkstelepathygtkdocDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distclean-local distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-folksdocDATA install-folksdummydocDATA \
	install-folksdummygtkdocDATA install-folksedsdocDATA \
	install-folksedsgtkdocDATA install-folksgtkdocDATA \
	install-folkslibsocialwebdocDATA \
	install-folkslibsocialwebgtkdocDATA \
	install-folkstelepathydocDATA install-folkstelepathygtkdocDATA \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
	ps ps-am tags-am uninstall uninstall-am uninstall-folksdocDATA \
	uninstall-folksdummydocDATA uninstall-folksdummygtkdocDATA \
	uninstall-folksedsdocDATA uninstall-folksedsgtkdocDATA \
	uninstall-folksgtkdocDATA uninstall-folkslibsocialwebdocDATA \
	uninstall-folkslibsocialwebgtkdocDATA \
	uninstall-folkstelepathydocDATA \
	uninstall-folkstelepathygtkdocDATA

.PRECIOUS: Makefile


$(folksdoc_DATA): folks-doc.stamp
$(folksgtkdoc_DATA): folks-gtk-doc.stamp

folks-doc.stamp: $(folks_doc_files) $(folks_wiki_files)
	$(AM_V_GEN)$(VALADOC) \
		-o folks/ \
		--doclet=devhelp \
		$(valadoc_flags_folks) \
		$(NULL)
	@touch $@

folks-gtk-doc.stamp: $(folks_doc_files) $(folks_wiki_files)
	$(AM_V_GEN)$(VALADOC) \
		-X -l -X $(top_builddir)/folks/.libs/libfolks.so \
		-o gtk-doc/folks \
		--doclet=gtkdoc \
		$(valadoc_flags_folks) \
		$(NULL)
	@touch $@

$(folksdummydoc_DATA): \
	folks-dummy-doc.stamp \
	$(NULL)
$(folksdummygtkdoc_DATA): folks-dummy-gtk-doc.stamp

folks-dummy-doc.stamp: $(folks_dummy_doc_files)
	$(AM_V_GEN)$(VALADOC) \
		-o folks-dummy/ \
		--doclet=devhelp \
		$(valadoc_flags_folks_dummy) \
		$(NULL)
	@touch $@

folks-dummy-gtk-doc.stamp: $(folks_dummy_doc_files)
	$(AM_V_GEN)$(VALADOC) \
		-X -l -X $(top_builddir)/folks/.libs/libfolks.so \
		-X -l -X $(top_builddir)/backends/dummy/lib/.libs/libfolks-dummy.so \
		-o gtk-doc/folks-dummy \
		--doclet=gtkdoc \
		$(valadoc_flags_folks_dummy) \
		$(NULL)
	@touch $@

$(folkstelepathydoc_DATA): \
	folks-telepathy-doc.stamp \
	$(NULL)
$(folkstelepathygtkdoc_DATA): folks-telepathy-gtk-doc.stamp

folks-telepathy-doc.stamp: $(folks_telepathy_doc_files)
	$(AM_V_GEN)$(VALADOC) \
		-o folks-telepathy/ \
		--doclet=devhelp \
		$(valadoc_flags_folks_telepathy) \
		$(NULL)
	@touch $@

folks-telepathy-gtk-doc.stamp: $(folks_telepathy_doc_files)
	$(AM_V_GEN)$(VALADOC) \
		-X -l -X $(top_builddir)/folks/.libs/libfolks.so \
		-X -l -X $(top_builddir)/backends/telepathy/lib/.libs/libfolks-telepathy.so \
		-X --ignore-headers -X $(top_srcdir)/backends/telepathy/lib/tp-lowlevel.h \
		-o gtk-doc/folks-telepathy \
		--doclet=gtkdoc \
		$(valadoc_flags_folks_telepathy) \
		$(NULL)
	@touch $@

@ENABLE_EDS_TRUE@$(folksedsdoc_DATA): \
@ENABLE_EDS_TRUE@	folks-eds-doc.stamp \
@ENABLE_EDS_TRUE@	$(NULL)
@ENABLE_EDS_TRUE@$(folksedsgtkdoc_DATA): folks-eds-gtk-doc.stamp

@ENABLE_EDS_TRUE@folks-eds-doc.stamp: $(folks_eds_doc_files)
@ENABLE_EDS_TRUE@	$(AM_V_GEN)$(VALADOC) \
@ENABLE_EDS_TRUE@		-o folks-eds/ \
@ENABLE_EDS_TRUE@		--doclet=devhelp \
@ENABLE_EDS_TRUE@		$(valadoc_flags_folks_eds) \
@ENABLE_EDS_TRUE@		$(NULL)
@ENABLE_EDS_TRUE@	@touch $@

@ENABLE_EDS_TRUE@folks-eds-gtk-doc.stamp: $(folks_eds_doc_files)
@ENABLE_EDS_TRUE@	$(AM_V_GEN)$(VALADOC) \
@ENABLE_EDS_TRUE@		-X -l -X $(top_builddir)/folks/.libs/libfolks.so \
@ENABLE_EDS_TRUE@		-X -l -X $(top_builddir)/backends/eds/lib/.libs/libfolks-eds.so \
@ENABLE_EDS_TRUE@		-o gtk-doc/folks-eds \
@ENABLE_EDS_TRUE@		--doclet=gtkdoc \
@ENABLE_EDS_TRUE@		$(valadoc_flags_folks_eds) \
@ENABLE_EDS_TRUE@		$(NULL)
@ENABLE_EDS_TRUE@	@touch $@

@ENABLE_LIBSOCIALWEB_TRUE@$(folkslibsocialwebdoc_DATA): \
@ENABLE_LIBSOCIALWEB_TRUE@	folks-libsocialweb-doc.stamp \
@ENABLE_LIBSOCIALWEB_TRUE@	$(NULL)
@ENABLE_LIBSOCIALWEB_TRUE@$(folkslibsocialwebgtkdoc_DATA): folks-libsocialweb-gtk-doc.stamp

@ENABLE_LIBSOCIALWEB_TRUE@folks-libsocialweb-doc.stamp: $(folks_libsocialweb_doc_files)
@ENABLE_LIBSOCIALWEB_TRUE@	$(AM_V_GEN)$(VALADOC) \
@ENABLE_LIBSOCIALWEB_TRUE@		-o folks-libsocialweb/ \
@ENABLE_LIBSOCIALWEB_TRUE@		--doclet=devhelp \
@ENABLE_LIBSOCIALWEB_TRUE@		$(valadoc_flags_folks_libsocialweb) \
@ENABLE_LIBSOCIALWEB_TRUE@		$(NULL)
@ENABLE_LIBSOCIALWEB_TRUE@	@touch $@

@ENABLE_LIBSOCIALWEB_TRUE@folks-libsocialweb-gtk-doc.stamp: $(folks_libsocialweb_doc_files)
@ENABLE_LIBSOCIALWEB_TRUE@	$(AM_V_GEN)$(VALADOC) \
@ENABLE_LIBSOCIALWEB_TRUE@		-X -l -X $(top_builddir)/folks/.libs/libfolks.so \
@ENABLE_LIBSOCIALWEB_TRUE@		-X -l -X $(top_builddir)/backends/libsocialweb/lib/.libs/libfolks-libsocialweb.so \
@ENABLE_LIBSOCIALWEB_TRUE@		-o gtk-doc/folks-libsocialweb \
@ENABLE_LIBSOCIALWEB_TRUE@		--doclet=gtkdoc \
@ENABLE_LIBSOCIALWEB_TRUE@		$(valadoc_flags_folks_libsocialweb) \
@ENABLE_LIBSOCIALWEB_TRUE@		$(NULL)
@ENABLE_LIBSOCIALWEB_TRUE@	@touch $@

all: $(stamps)

upload-docs-check-%: %
	ssh $(doc_host) "test -e $(doc_host_dir)/$< || mkdir $(doc_host_dir)/$<"

# adapted from telepathy-glib
upload-docs-c-%: gtk-doc/% upload-docs-check-%
	rsync -rvzPp --chmod=Dg+s,ug+rwX,o=rX $(top_srcdir)/docs/$</html/ \
		$(doc_host):$(doc_host_dir)/$(<F)/c

upload-docs-vala-%: % upload-docs-check-%
	rsync -rvzPp --chmod=Dg+s,ug+rwX,o=rX $(top_srcdir)/docs/$</$</ \
		$(doc_host):$(doc_host_dir)/$</vala

maintainer-upload-release: _maintainer-upload-release-local
_maintainer-upload-release-local: $(upload_docs)

distclean-local: distclean-docs
distclean-docs:
	rm -rf $(distclean_dirs)

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
