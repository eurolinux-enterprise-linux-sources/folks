/* bluez-test.vapi generated by valac 0.36.1.697-2b74, do not modify. */

namespace org {
	namespace bluez {
		namespace obex {
			namespace transfer1 {
				[CCode (cheader_filename = "bluez-test.h")]
				[DBus (name = "org.bluez.obex.transfer1.Mock")]
				public interface Mock : GLib.Object {
					[DBus (name = "UpdateStatus")]
					public abstract void update_status (bool is_complete) throws GLib.IOError;
				}
			}
			[CCode (cheader_filename = "bluez-test.h")]
			[DBus (name = "org.bluez.obex.Mock")]
			public interface Mock : GLib.Object {
				[DBus (name = "TransferCreated")]
				public signal void transfer_created (string path, GLib.HashTable<string,GLib.Variant> filters, string transfer_filename);
			}
		}
		[CCode (cheader_filename = "bluez-test.h")]
		[DBus (name = "org.bluez.Mock")]
		public interface Mock : GLib.Object {
			[DBus (name = "AddAdapter")]
			public abstract string add_adapter (string device_name, string system_name) throws GLib.IOError;
			[DBus (name = "AddDevice")]
			public abstract string add_device (string adapter_device_name, string device_address, string alias) throws GLib.IOError;
			[DBus (name = "BlockDevice")]
			public abstract void block_device (string adapter_device_name, string device_address) throws GLib.IOError;
			[DBus (name = "PairDevice")]
			public abstract void pair_device (string adapter_device_name, string device_address) throws GLib.IOError;
		}
	}
}
namespace BluezTest {
	[CCode (cheader_filename = "bluez-test.h")]
	public class Backend {
		public Backend ();
		public ulong create_simple_device_with_vcard (string vcard, out string? adapter_path = null, out string? device_path = null);
		public ulong set_simple_device_vcard (string vcard);
		public void set_up ();
		public void tear_down ();
		public org.bluez.Mock? mock_bluez { get; }
		public org.freedesktop.DBus.Mock? mock_bluez_base { get; }
		public org.bluez.obex.Mock? mock_obex { get; }
		public org.freedesktop.DBus.Mock? mock_obex_base { get; }
		public string primary_device_address { get; }
	}
	[CCode (cheader_filename = "bluez-test.h")]
	public class TestCase : Folks.TestCase {
		public BluezTest.Backend? bluez_backend;
		public TestCase (string name);
		public virtual void configure_primary_store ();
		public virtual void create_backend ();
		public override string create_transient_dir ();
		public override void private_bus_up ();
		public override void set_up ();
		public override void tear_down ();
	}
}
