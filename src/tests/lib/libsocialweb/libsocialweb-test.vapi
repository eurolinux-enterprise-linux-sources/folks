/* libsocialweb-test.vapi generated by valac 0.34.0.3-63fa6, do not modify. */

namespace LibsocialwebTest {
	[CCode (cheader_filename = "libsocialweb-test.h")]
	public class Backend {
		public const string LIBSOCIALWEB_BUS_NAME;
		public const string LIBSOCIALWEB_IFACE;
		public const string LIBSOCIALWEB_PATH;
		public Backend ();
		public LibsocialwebTest.LibsocialwebServiceTest add_service (string service_name);
		public void set_up ();
		public void tear_down ();
		public bool debug { get; set; }
		public signal void ready ();
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb.ContactView")]
	public class LibsocialwebContactViewTest : GLib.Object {
		public struct ContactsAddedElement {
			public string service;
			public string id;
			public int64 time;
			[DBus (signature = "a{sas}")]
			public GLib.Variant attrs;
		}
		public struct ContactsRemovedElement {
			public string service;
			public string id;
		}
		public string path;
		public string query;
		public LibsocialwebContactViewTest (string query, GLib.HashTable<string,string> p, string path);
		public void Close ();
		[DBus (visible = false)]
		public void EmitContactsAdded (string text);
		[DBus (visible = false)]
		public void EmitContactsChanged (string text);
		[DBus (visible = false)]
		public void EmitContactsRemoved (string text);
		public void Refresh ();
		public void Start ();
		public void Stop ();
		[DBus (visible = false)]
		public signal void CloseCalled (string path);
		[DBus (signature = "a(ssxa{sas})")]
		public signal void ContactsAdded (LibsocialwebTest.LibsocialwebContactViewTest.ContactsAddedElement[] contacts);
		[DBus (signature = "a(ssxa{sas})")]
		public signal void ContactsChanged (LibsocialwebTest.LibsocialwebContactViewTest.ContactsAddedElement[] contacts);
		[DBus (signature = "a(ss)")]
		public signal void ContactsRemoved (LibsocialwebTest.LibsocialwebContactViewTest.ContactsRemovedElement[] contacts);
		[DBus (visible = false)]
		public signal void RefreshCalled (string path);
		[DBus (visible = false)]
		public signal void StartCalled (string path);
		[DBus (visible = false)]
		public signal void StopCalled (string path);
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb")]
	public class LibsocialwebServerTest : GLib.Object {
		public LibsocialwebServerTest ();
		[DBus (visible = false)]
		public LibsocialwebTest.LibsocialwebServiceTest add_service (string service_name);
		[DBus (name = "GetServices")]
		public string[] get_services ();
		[DBus (name = "IsOnline")]
		public bool is_online ();
		[DBus (visible = false)]
		public void register ();
		[DBus (visible = false)]
		public void unregister ();
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb.ContactsQuery")]
	public class LibsocialwebServiceTest : GLib.Object, LibsocialwebTest.LibsocialwebServiceCapabilitiesTest, LibsocialwebTest.LibsocialwebServiceQueryTest {
		public Gee.HashMap<string,LibsocialwebTest.LibsocialwebContactViewTest> contact_views;
		public LibsocialwebServiceTest (string service_name);
		[DBus (visible = false)]
		public signal void OpenViewCalled (string query, GLib.HashTable<string,string> p, string path);
		public signal void registered_child (uint id);
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	public class TestCase : Folks.TestCase {
		public LibsocialwebTest.Backend? lsw_backend;
		public TestCase (string name);
		public override void set_up ();
		public override void tear_down ();
		public override bool uses_dbus_1 { get; }
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb.ContactView")]
	public interface ContactView : GLib.DBusProxy {
		public struct ContactsAddedElement {
			public string service;
			public string id;
			public int64 time;
			[DBus (signature = "a{sas}")]
			public GLib.Variant attrs;
		}
		public struct ContactsRemovedElement {
			public string service;
			public string id;
		}
		public abstract async void Close () throws GLib.IOError;
		public abstract async void Refresh () throws GLib.IOError;
		public abstract async void Start () throws GLib.IOError;
		public abstract async void Stop () throws GLib.IOError;
		[DBus (signature = "a(ssxa{sas})")]
		public signal void ContactsAdded (LibsocialwebTest.ContactView.ContactsAddedElement[] contacts);
		[DBus (signature = "a(ssxa{sas})")]
		public signal void ContactsChanged (LibsocialwebTest.ContactView.ContactsAddedElement[] contacts);
		[DBus (signature = "a(ss)")]
		public signal void ContactsRemoved (LibsocialwebTest.ContactView.ContactsRemovedElement[] contacts);
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb.Service")]
	public interface LibsocialwebServiceCapabilitiesTest : GLib.Object {
		[DBus (name = "GetStaticCapabilities")]
		public abstract string[] GetStaticCapabilities () throws GLib.IOError;
	}
	[CCode (cheader_filename = "libsocialweb-test.h")]
	[DBus (name = "org.gnome.libsocialweb.ContactsQuery")]
	public interface LibsocialwebServiceQueryTest : GLib.Object {
		[DBus (name = "OpenView")]
		public abstract GLib.ObjectPath OpenView (string query, GLib.HashTable<string,string> p) throws GLib.IOError;
	}
}
