<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="TelepathyGLib" version="0.12"/>
  <namespace name="TpTests"
             version="contactlist"
             shared-library=""
             c:identifier-prefixes="TpTests"
             c:symbol-prefixes="tp_tests">
    <class name="Backend"
           c:symbol-prefix="backend"
           c:type="TpTestsBackend"
           parent="GObject.Object"
           glib:type-name="TpTestsBackend"
           glib:get-type="tp_tests_backend_get_type"
           glib:type-struct="BackendClass">
      <constructor name="new" c:identifier="tp_tests_backend_new">
        <return-value transfer-ownership="full">
          <type name="Backend" c:type="TpTestsBackend*"/>
        </return-value>
      </constructor>
      <method name="add_account" c:identifier="tp_tests_backend_add_account">
        <return-value transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Backend" c:type="TpTestsBackend*"/>
          </instance-parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cm_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="account" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connection_for_handle"
              c:identifier="tp_tests_backend_get_connection_for_handle">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the contact list connection or %NULL.</doc>
          <type name="ContactsConnection" c:type="TpTestsContactsConnection*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">the backend</doc>
            <type name="Backend" c:type="TpTestsBackend*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_account"
              c:identifier="tp_tests_backend_remove_account">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Backend" c:type="TpTestsBackend*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_up" c:identifier="tp_tests_backend_set_up">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Backend" c:type="TpTestsBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="tear_down" c:identifier="tp_tests_backend_tear_down">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Backend" c:type="TpTestsBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BackendPrivate" c:type="TpTestsBackendPrivate*"/>
      </field>
    </class>
    <record name="BackendClass"
            c:type="TpTestsBackendClass"
            glib:is-gtype-struct-for="Backend">
      <field name="parent" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="BackendPrivate" c:type="TpTestsBackendPrivate" disguised="1">
    </record>
    <class name="ContactListManager"
           c:symbol-prefix="contact_list_manager"
           c:type="TpTestsContactListManager"
           parent="GObject.Object"
           glib:type-name="TpTestsContactListManager"
           glib:get-type="tp_tests_contact_list_manager_get_type"
           glib:type-struct="ContactListManagerClass">
      <method name="add_initial_contacts"
              c:identifier="tp_tests_contact_list_manager_add_initial_contacts">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_to_group"
              c:identifier="tp_tests_contact_list_manager_add_to_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="group_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="member" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle"/>
          </parameter>
        </parameters>
      </method>
      <method name="authorize_publication"
              c:identifier="tp_tests_contact_list_manager_authorize_publication">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="tp_tests_contact_list_manager_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_from_group"
              c:identifier="tp_tests_contact_list_manager_remove_from_group">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="group_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="member" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_subscription"
              c:identifier="tp_tests_contact_list_manager_request_subscription">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unpublish"
              c:identifier="tp_tests_contact_list_manager_unpublish">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unsubscribe"
              c:identifier="tp_tests_contact_list_manager_unsubscribe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactListManager"
                  c:type="TpTestsContactListManager*"/>
          </instance-parameter>
          <parameter name="n_members" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="members" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent" introspectable="0">
        <type c:type="TpBaseContactList"/>
      </field>
      <field name="priv">
        <type name="ContactListManagerPrivate"
              c:type="TpTestsContactListManagerPrivate*"/>
      </field>
    </class>
    <record name="ContactListManagerClass"
            c:type="TpTestsContactListManagerClass"
            glib:is-gtype-struct-for="ContactListManager">
      <field name="parent_class" introspectable="0">
        <type c:type="TpBaseContactListClass"/>
      </field>
    </record>
    <record name="ContactListManagerPrivate"
            c:type="TpTestsContactListManagerPrivate"
            disguised="1">
    </record>
    <class name="ContactsConnection"
           c:symbol-prefix="contacts_connection"
           c:type="TpTestsContactsConnection"
           parent="SimpleConnection"
           glib:type-name="TpTestsContactsConnection"
           glib:get-type="tp_tests_contacts_connection_get_type"
           glib:type-struct="ContactsConnectionClass">
      <method name="change_aliases"
              c:identifier="tp_tests_contacts_connection_change_aliases">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve">a #TpTestsContactsConnection</doc>
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve">the number of handles</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="handles" transfer-ownership="none">
            <doc xml:space="preserve">the handles</doc>
            <array length="0" zero-terminated="0" c:type="TpHandle*">
              <type name="TelepathyGLib.Handle" c:type="TpHandle"/>
            </array>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve">aliases</doc>
            <array length="0" zero-terminated="0" c:type="gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="change_avatar_data"
              c:identifier="tp_tests_contacts_connection_change_avatar_data"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <array name="GLib.Array" c:type="GArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
          <parameter name="mime_type" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="token" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="change_avatar_tokens"
              c:identifier="tp_tests_contacts_connection_change_avatar_tokens">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="handles" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="const TpHandle*"/>
          </parameter>
          <parameter name="tokens" transfer-ownership="none">
            <type name="utf8" c:type="const gchar* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="change_capabilities"
              c:identifier="tp_tests_contacts_connection_change_capabilities">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="capabilities" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="change_contact_info"
              c:identifier="tp_tests_contacts_connection_change_contact_info"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="TpHandle"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="change_locations"
              c:identifier="tp_tests_contacts_connection_change_locations">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="handles" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="const TpHandle*"/>
          </parameter>
          <parameter name="locations" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="change_presences"
              c:identifier="tp_tests_contacts_connection_change_presences">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="handles" transfer-ownership="none">
            <type name="TelepathyGLib.Handle" c:type="const TpHandle*"/>
          </parameter>
          <parameter name="indexes" transfer-ownership="none">
            <type name="ContactsConnectionPresenceStatusIndex"
                  c:type="const TpTestsContactsConnectionPresenceStatusIndex*"/>
          </parameter>
          <parameter name="messages" transfer-ownership="none">
            <type name="utf8" c:type="const gchar* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_contact_list_manager"
              c:identifier="tp_tests_contacts_connection_get_contact_list_manager"
              introspectable="0">
        <return-value>
          <type name="ContactListManager" c:type="TpTestsContactListManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_contact_info"
              c:identifier="tp_tests_contacts_connection_set_default_contact_info"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ContactsConnection"
                  c:type="TpTestsContactsConnection*"/>
          </instance-parameter>
          <parameter name="info" transfer-ownership="none">
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="SimpleConnection" c:type="TpTestsSimpleConnection"/>
      </field>
      <field name="presence_mixin">
        <type name="TelepathyGLib.PresenceMixin" c:type="TpPresenceMixin"/>
      </field>
      <field name="contacts_mixin">
        <type name="TelepathyGLib.ContactsMixin" c:type="TpContactsMixin"/>
      </field>
      <field name="priv">
        <type name="ContactsConnectionPrivate"
              c:type="TpTestsContactsConnectionPrivate*"/>
      </field>
    </class>
    <record name="ContactsConnectionClass"
            c:type="TpTestsContactsConnectionClass"
            glib:is-gtype-struct-for="ContactsConnection">
      <field name="parent_class">
        <type name="SimpleConnectionClass"
              c:type="TpTestsSimpleConnectionClass"/>
      </field>
      <field name="presence_mixin">
        <type name="TelepathyGLib.PresenceMixinClass"
              c:type="TpPresenceMixinClass"/>
      </field>
      <field name="contacts_mixin">
        <type name="TelepathyGLib.ContactsMixinClass"
              c:type="TpContactsMixinClass"/>
      </field>
      <field name="properties_class" introspectable="0">
        <type c:type="TpDBusPropertiesMixinClass"/>
      </field>
      <field name="fill_client_types" introspectable="0">
        <type name="TelepathyGLib.ContactsMixinFillContactAttributesFunc"
              c:type="TpContactsMixinFillContactAttributesFunc"/>
      </field>
    </record>
    <enumeration name="ContactsConnectionPresenceStatusIndex"
                 c:type="TpTestsContactsConnectionPresenceStatusIndex">
      <member name="available"
              value="0"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_AVAILABLE">
      </member>
      <member name="busy"
              value="1"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_BUSY">
      </member>
      <member name="away"
              value="2"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_AWAY">
      </member>
      <member name="offline"
              value="3"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_OFFLINE">
      </member>
      <member name="unknown"
              value="4"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_UNKNOWN">
      </member>
      <member name="error"
              value="5"
              c:identifier="TP_TESTS_CONTACTS_CONNECTION_STATUS_ERROR">
      </member>
    </enumeration>
    <record name="ContactsConnectionPrivate"
            c:type="TpTestsContactsConnectionPrivate"
            disguised="1">
    </record>
    <class name="LegacyContactsConnection"
           c:symbol-prefix="legacy_contacts_connection"
           c:type="TpTestsLegacyContactsConnection"
           parent="ContactsConnection"
           glib:type-name="TpTestsLegacyContactsConnection"
           glib:get-type="tp_tests_legacy_contacts_connection_get_type"
           glib:type-struct="LegacyContactsConnectionClass">
      <field name="parent">
        <type name="ContactsConnection" c:type="TpTestsContactsConnection"/>
      </field>
      <field name="priv">
        <type name="LegacyContactsConnectionPrivate"
              c:type="TpTestsLegacyContactsConnectionPrivate*"/>
      </field>
    </class>
    <record name="LegacyContactsConnectionClass"
            c:type="TpTestsLegacyContactsConnectionClass"
            glib:is-gtype-struct-for="LegacyContactsConnection">
      <field name="parent_class">
        <type name="ContactsConnectionClass"
              c:type="TpTestsContactsConnectionClass"/>
      </field>
    </record>
    <record name="LegacyContactsConnectionPrivate"
            c:type="TpTestsLegacyContactsConnectionPrivate"
            disguised="1">
    </record>
    <class name="NoRequestsConnection"
           c:symbol-prefix="no_requests_connection"
           c:type="TpTestsNoRequestsConnection"
           parent="ContactsConnection"
           glib:type-name="TpTestsNoRequestsConnection"
           glib:get-type="tp_tests_no_requests_connection_get_type"
           glib:type-struct="NoRequestsConnectionClass">
      <field name="parent">
        <type name="ContactsConnection" c:type="TpTestsContactsConnection"/>
      </field>
      <field name="priv">
        <type name="NoRequestsConnectionPrivate"
              c:type="TpTestsNoRequestsConnectionPrivate*"/>
      </field>
    </class>
    <record name="NoRequestsConnectionClass"
            c:type="TpTestsNoRequestsConnectionClass"
            glib:is-gtype-struct-for="NoRequestsConnection">
      <field name="parent_class">
        <type name="ContactsConnectionClass"
              c:type="TpTestsContactsConnectionClass"/>
      </field>
    </record>
    <record name="NoRequestsConnectionPrivate"
            c:type="TpTestsNoRequestsConnectionPrivate"
            disguised="1">
    </record>
    <class name="PropsGroupTextChannel"
           c:symbol-prefix="props_group_text_channel"
           c:type="TpTestsPropsGroupTextChannel"
           parent="PropsTextChannel"
           glib:type-name="TpTestsPropsGroupTextChannel"
           glib:get-type="tp_tests_props_group_text_channel_get_type"
           glib:type-struct="PropsGroupTextChannelClass">
    </class>
    <record name="PropsGroupTextChannelClass"
            c:type="TpTestsPropsGroupTextChannelClass"
            disguised="1"
            glib:is-gtype-struct-for="PropsGroupTextChannel">
    </record>
    <class name="PropsTextChannel"
           c:symbol-prefix="props_text_channel"
           c:type="TpTestsPropsTextChannel"
           parent="TextChannelNull"
           glib:type-name="TpTestsPropsTextChannel"
           glib:get-type="tp_tests_props_text_channel_get_type"
           glib:type-struct="PropsTextChannelClass">
    </class>
    <record name="PropsTextChannelClass"
            c:type="TpTestsPropsTextChannelClass"
            disguised="1"
            glib:is-gtype-struct-for="PropsTextChannel">
    </record>
    <class name="RoomListChan"
           c:symbol-prefix="room_list_chan"
           c:type="TpTestsRoomListChan"
           parent="GObject.Object"
           glib:type-name="TpTestsRoomListChan"
           glib:get-type="tp_tests_room_list_chan_get_type"
           glib:type-struct="RoomListChanClass">
      <property name="server"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent" introspectable="0">
        <type c:type="TpBaseChannel"/>
      </field>
      <field name="priv">
        <type name="RoomListChanPriv" c:type="TpTestsRoomListChanPriv*"/>
      </field>
    </class>
    <record name="RoomListChanClass"
            c:type="TpTestsRoomListChanClass"
            glib:is-gtype-struct-for="RoomListChan">
      <field name="parent_class" introspectable="0">
        <type c:type="TpBaseChannelClass"/>
      </field>
      <field name="dbus_properties_class" introspectable="0">
        <type c:type="TpDBusPropertiesMixinClass"/>
      </field>
    </record>
    <record name="RoomListChanPriv"
            c:type="TpTestsRoomListChanPriv"
            disguised="1">
    </record>
    <class name="SimpleAccount"
           c:symbol-prefix="simple_account"
           c:type="TpTestsSimpleAccount"
           parent="GObject.Object"
           glib:type-name="TpTestsSimpleAccount"
           glib:get-type="tp_tests_simple_account_get_type"
           glib:type-struct="SimpleAccountClass">
      <method name="removed" c:identifier="tp_tests_simple_account_removed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccount" c:type="TpTestsSimpleAccount*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_connection"
              c:identifier="tp_tests_simple_account_set_connection">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccount" c:type="TpTestsSimpleAccount*"/>
          </instance-parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="tp_tests_simple_account_set_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccount" c:type="TpTestsSimpleAccount*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_presence"
              c:identifier="tp_tests_simple_account_set_presence">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccount" c:type="TpTestsSimpleAccount*"/>
          </instance-parameter>
          <parameter name="presence" transfer-ownership="none">
            <type name="TelepathyGLib.ConnectionPresenceType"
                  c:type="TpConnectionPresenceType"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="automatic-presence"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="avatar" introspectable="0" transfer-ownership="none">
        <type/>
      </property>
      <property name="connect-automatically" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="connection" introspectable="0" transfer-ownership="none">
        <type/>
      </property>
      <property name="connection-status" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="connection-status-reason" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="current-presence"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="display-name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="enabled" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-been-online" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="interfaces" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="nickname" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="normalized-name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="parameters" introspectable="0" transfer-ownership="none">
        <type/>
      </property>
      <property name="requested-presence"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="storage-identifier" transfer-ownership="none">
        <type name="GObject.Value"/>
      </property>
      <property name="storage-provider" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="storage-restrictions" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="storage-specific-information"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="supersedes" introspectable="0" transfer-ownership="none">
        <type/>
      </property>
      <property name="uri-schemes" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="valid" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SimpleAccountPrivate"
              c:type="TpTestsSimpleAccountPrivate*"/>
      </field>
    </class>
    <record name="SimpleAccountClass"
            c:type="TpTestsSimpleAccountClass"
            glib:is-gtype-struct-for="SimpleAccount">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="dbus_props_class" introspectable="0">
        <type c:type="TpDBusPropertiesMixinClass"/>
      </field>
    </record>
    <class name="SimpleAccountManager"
           c:symbol-prefix="simple_account_manager"
           c:type="TpTestsSimpleAccountManager"
           parent="GObject.Object"
           glib:type-name="TpTestsSimpleAccountManager"
           glib:get-type="tp_tests_simple_account_manager_get_type"
           glib:type-struct="SimpleAccountManagerClass">
      <method name="add_account"
              c:identifier="tp_tests_simple_account_manager_add_account">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccountManager"
                  c:type="TpTestsSimpleAccountManager*"/>
          </instance-parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="valid" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_account"
              c:identifier="tp_tests_simple_account_manager_remove_account">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleAccountManager"
                  c:type="TpTestsSimpleAccountManager*"/>
          </instance-parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="interfaces" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="invalid-accounts"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="valid-accounts"
                introspectable="0"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="create_cm">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="create_protocol">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="create_display_name">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="create_parameters">
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="create_properties">
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="priv">
        <type name="SimpleAccountManagerPrivate"
              c:type="TpTestsSimpleAccountManagerPrivate*"/>
      </field>
    </class>
    <record name="SimpleAccountManagerClass"
            c:type="TpTestsSimpleAccountManagerClass"
            glib:is-gtype-struct-for="SimpleAccountManager">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="dbus_props_class" introspectable="0">
        <type c:type="TpDBusPropertiesMixinClass"/>
      </field>
    </record>
    <record name="SimpleAccountManagerPrivate"
            c:type="TpTestsSimpleAccountManagerPrivate"
            disguised="1">
    </record>
    <record name="SimpleAccountPrivate"
            c:type="TpTestsSimpleAccountPrivate"
            disguised="1">
    </record>
    <class name="SimpleConnection"
           c:symbol-prefix="simple_connection"
           c:type="TpTestsSimpleConnection"
           parent="TelepathyGLib.BaseConnection"
           glib:type-name="TpTestsSimpleConnection"
           glib:get-type="tp_tests_simple_connection_get_type"
           glib:type-struct="SimpleConnectionClass">
      <constructor name="new" c:identifier="tp_tests_simple_connection_new">
        <return-value transfer-ownership="full">
          <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
        </return-value>
        <parameters>
          <parameter name="account" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ensure_room_list_chan"
              c:identifier="tp_tests_simple_connection_ensure_room_list_chan">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
          </instance-parameter>
          <parameter name="server" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="props" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_text_chan"
              c:identifier="tp_tests_simple_connection_ensure_text_chan">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
          </instance-parameter>
          <parameter name="target_id" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="props" transfer-ownership="none">
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="gpointer" c:type="gpointer"/>
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="inject_disconnect"
              c:identifier="tp_tests_simple_connection_inject_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_get_self_handle_error"
              c:identifier="tp_tests_simple_connection_set_get_self_handle_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
          </instance-parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_identifier"
              c:identifier="tp_tests_simple_connection_set_identifier">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="SimpleConnection" c:type="TpTestsSimpleConnection*"/>
          </instance-parameter>
          <parameter name="identifier" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="account"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="break-0192-properties"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="dbus-status" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent">
        <type name="TelepathyGLib.BaseConnection" c:type="TpBaseConnection"/>
      </field>
      <field name="priv">
        <type name="SimpleConnectionPrivate"
              c:type="TpTestsSimpleConnectionPrivate*"/>
      </field>
      <glib:signal name="got-self-handle" when="last" detailed="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="SimpleConnectionClass"
            c:type="TpTestsSimpleConnectionClass"
            glib:is-gtype-struct-for="SimpleConnection">
      <field name="parent_class">
        <type name="TelepathyGLib.BaseConnectionClass"
              c:type="TpBaseConnectionClass"/>
      </field>
    </record>
    <record name="SimpleConnectionPrivate"
            c:type="TpTestsSimpleConnectionPrivate"
            disguised="1">
    </record>
    <class name="TextChannelNull"
           c:symbol-prefix="text_channel_null"
           c:type="TpTestsTextChannelNull"
           parent="GObject.Object"
           glib:type-name="TpTestsTextChannelNull"
           glib:get-type="tp_tests_text_channel_null_get_type"
           glib:type-struct="TextChannelNullClass">
      <method name="close" c:identifier="tp_tests_text_channel_null_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="TextChannelNull" c:type="TpTestsTextChannelNull*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="TelepathyGLib.BaseConnection"/>
      </property>
      <property name="initiator-handle" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="initiator-id" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="interfaces" transfer-ownership="none">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="requested" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="target-id" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="text" introspectable="0">
        <type c:type="TpTextMixin"/>
      </field>
      <field name="get_handle_called">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="get_interfaces_called">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="get_channel_type_called">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="priv">
        <type name="TextChannelNullPrivate"
              c:type="TpTestsTextChannelNullPrivate*"/>
      </field>
    </class>
    <record name="TextChannelNullClass"
            c:type="TpTestsTextChannelNullClass"
            glib:is-gtype-struct-for="TextChannelNull">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="text_class" introspectable="0">
        <type c:type="TpTextMixinClass"/>
      </field>
    </record>
    <record name="TextChannelNullPrivate"
            c:type="TpTestsTextChannelNullPrivate"
            disguised="1">
    </record>
    <function name="abort_after" c:identifier="tp_tests_abort_after">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sec" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="connection_assert_disconnect_succeeds"
              c:identifier="tp_tests_connection_assert_disconnect_succeeds">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="TelepathyGLib.Connection" c:type="TpConnection*"/>
        </parameter>
      </parameters>
    </function>
    <function name="connection_run_until_contact_by_id"
              c:identifier="tp_tests_connection_run_until_contact_by_id"
              introspectable="0">
      <return-value>
        <type name="TelepathyGLib.Contact" c:type="TpContact*"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="TelepathyGLib.Connection" c:type="TpConnection*"/>
        </parameter>
        <parameter name="id" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="n_features" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="features" transfer-ownership="none">
          <type name="TelepathyGLib.ContactFeature"
                c:type="const TpContactFeature*"/>
        </parameter>
      </parameters>
    </function>
    <function name="create_and_connect_conn"
              c:identifier="tp_tests_create_and_connect_conn">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="conn_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="account" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="service_conn" transfer-ownership="none">
          <type name="TelepathyGLib.BaseConnection"
                c:type="TpBaseConnection**"/>
        </parameter>
        <parameter name="client_conn" transfer-ownership="none">
          <type name="TelepathyGLib.Connection" c:type="TpConnection**"/>
        </parameter>
      </parameters>
    </function>
    <function name="create_conn" c:identifier="tp_tests_create_conn">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="conn_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="account" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="connect" transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="service_conn" transfer-ownership="none">
          <type name="TelepathyGLib.BaseConnection"
                c:type="TpBaseConnection**"/>
        </parameter>
        <parameter name="client_conn" transfer-ownership="none">
          <type name="TelepathyGLib.Connection" c:type="TpConnection**"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_daemon_dup_or_die"
              c:identifier="tp_tests_dbus_daemon_dup_or_die"
              introspectable="0">
      <return-value>
        <type name="TelepathyGLib.DBusDaemon" c:type="TpDBusDaemon*"/>
      </return-value>
    </function>
    <function name="init" c:identifier="tp_tests_init">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="argc" transfer-ownership="none">
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv" transfer-ownership="none">
          <type name="utf8" c:type="char***"/>
        </parameter>
      </parameters>
    </function>
    <function name="object_new_static_class"
              c:identifier="tp_tests_object_new_static_class"
              introspectable="0">
      <return-value>
        <type name="gpointer" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="arg1" transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="proxy_run_until_dbus_queue_processed"
              c:identifier="tp_tests_proxy_run_until_dbus_queue_processed">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="proxy_run_until_prepared"
              c:identifier="tp_tests_proxy_run_until_prepared">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="features" transfer-ownership="none">
          <type name="GLib.Quark" c:type="const GQuark*"/>
        </parameter>
      </parameters>
    </function>
    <function name="proxy_run_until_prepared_or_failed"
              c:identifier="tp_tests_proxy_run_until_prepared_or_failed"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="proxy" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="features" transfer-ownership="none">
          <type name="GLib.Quark" c:type="const GQuark*"/>
        </parameter>
      </parameters>
    </function>
    <function name="result_ready_cb" c:identifier="tp_tests_result_ready_cb">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="run_until_result" c:identifier="tp_tests_run_until_result">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <type name="Gio.AsyncResult" c:type="GAsyncResult**"/>
        </parameter>
      </parameters>
    </function>
    <function name="text_channel_get_props"
              c:identifier="tp_tests_text_channel_get_props"
              introspectable="0">
      <return-value>
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="self" transfer-ownership="none">
          <type name="TextChannelNull" c:type="TpTestsTextChannelNull*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
