/* tpf-test.h generated by valac 0.26.2.1-1f25, the Vala compiler, do not modify */


#ifndef __TPF_TEST_H__
#define __TPF_TEST_H__

#include <glib.h>
#include <folks-test.h>
#include <kf-test.h>
#include <tp-test-contactlist.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define TPF_TEST_TYPE_TEST_CASE (tpf_test_test_case_get_type ())
#define TPF_TEST_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TPF_TEST_TYPE_TEST_CASE, TpfTestTestCase))
#define TPF_TEST_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TPF_TEST_TYPE_TEST_CASE, TpfTestTestCaseClass))
#define TPF_TEST_IS_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TPF_TEST_TYPE_TEST_CASE))
#define TPF_TEST_IS_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TPF_TEST_TYPE_TEST_CASE))
#define TPF_TEST_TEST_CASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TPF_TEST_TYPE_TEST_CASE, TpfTestTestCaseClass))

typedef struct _TpfTestTestCase TpfTestTestCase;
typedef struct _TpfTestTestCaseClass TpfTestTestCaseClass;
typedef struct _TpfTestTestCasePrivate TpfTestTestCasePrivate;

#define TPF_TEST_TYPE_MIXED_TEST_CASE (tpf_test_mixed_test_case_get_type ())
#define TPF_TEST_MIXED_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TPF_TEST_TYPE_MIXED_TEST_CASE, TpfTestMixedTestCase))
#define TPF_TEST_MIXED_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TPF_TEST_TYPE_MIXED_TEST_CASE, TpfTestMixedTestCaseClass))
#define TPF_TEST_IS_MIXED_TEST_CASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TPF_TEST_TYPE_MIXED_TEST_CASE))
#define TPF_TEST_IS_MIXED_TEST_CASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TPF_TEST_TYPE_MIXED_TEST_CASE))
#define TPF_TEST_MIXED_TEST_CASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TPF_TEST_TYPE_MIXED_TEST_CASE, TpfTestMixedTestCaseClass))

typedef struct _TpfTestMixedTestCase TpfTestMixedTestCase;
typedef struct _TpfTestMixedTestCaseClass TpfTestMixedTestCaseClass;
typedef struct _TpfTestMixedTestCasePrivate TpfTestMixedTestCasePrivate;

struct _TpfTestTestCase {
	FolksTestCase parent_instance;
	TpfTestTestCasePrivate * priv;
	KfTestBackend* kf_backend;
	TpTestsBackend* tp_backend;
	void* account_handle;
};

struct _TpfTestTestCaseClass {
	FolksTestCaseClass parent_class;
	void (*create_kf_backend) (TpfTestTestCase* self);
	void (*create_tp_backend) (TpfTestTestCase* self);
	void (*set_up_tp) (TpfTestTestCase* self);
	void (*set_up_kf) (TpfTestTestCase* self);
	gboolean (*get_use_keyfile_too) (TpfTestTestCase* self);
};

struct _TpfTestMixedTestCase {
	TpfTestTestCase parent_instance;
	TpfTestMixedTestCasePrivate * priv;
};

struct _TpfTestMixedTestCaseClass {
	TpfTestTestCaseClass parent_class;
};


GType tpf_test_test_case_get_type (void) G_GNUC_CONST;
TpfTestTestCase* tpf_test_test_case_new (const gchar* name);
TpfTestTestCase* tpf_test_test_case_construct (GType object_type, const gchar* name);
void tpf_test_test_case_create_kf_backend (TpfTestTestCase* self);
void tpf_test_test_case_create_tp_backend (TpfTestTestCase* self);
void tpf_test_test_case_set_up_tp (TpfTestTestCase* self);
void tpf_test_test_case_set_up_kf (TpfTestTestCase* self);
gboolean tpf_test_test_case_get_use_keyfile_too (TpfTestTestCase* self);
GType tpf_test_mixed_test_case_get_type (void) G_GNUC_CONST;
TpfTestMixedTestCase* tpf_test_mixed_test_case_new (const gchar* name);
TpfTestMixedTestCase* tpf_test_mixed_test_case_construct (GType object_type, const gchar* name);


G_END_DECLS

#endif
